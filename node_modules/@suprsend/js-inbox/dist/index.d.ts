import ApiClient from './api';
import Inbox from './notifications';
import { IActionObject, IAvatarObject, ISubTextObject, IRemoteNotification, IRemoteNotificationMessage, IStore } from './types';
export default class SuprSendInbox {
    workspaceKey: string;
    tenantId?: string;
    stores?: IStore[];
    distinctId?: string;
    subscriberId?: string;
    private _client?;
    private _expiryTimerId?;
    feed: Inbox;
    emitter: import("mitt").Emitter<Record<import("mitt").EventType, unknown>>;
    constructor(workspaceKey: string, config?: {
        pageSize?: number;
        tenantID?: string;
        stores?: IStore[];
    });
    private _validateConfig;
    private _validateStore;
    private _validatePageSize;
    private _initializeStoreState;
    _startExipryCheck(): void;
    get client(): ApiClient | undefined;
    identifyUser(distinctId?: string, subscriberId?: string): void;
    changeActiveStore(storeId: string): void;
    resetUser(): void;
}
export type { IActionObject, IRemoteNotification, IRemoteNotificationMessage, IStore, IAvatarObject, ISubTextObject };
